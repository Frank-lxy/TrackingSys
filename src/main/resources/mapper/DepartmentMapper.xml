<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace目前可以自定义要唯一，将来面向接口编程时对应dao接口，一个mapper相当于一个dao接口的实现类 -->
<mapper namespace="com.jxd.dao.IDepartmentDao">

    <!--boolean editDepartment(Department department);-->
    <update id="editDepartment">
        update department set departmentName=#{departmentName}
        where departmentId=#{departmentId}
    </update>

    <!--Department getDepartmentById(Integer departmentId);-->
    <select id="getDepartmentById" resultType="Department">
        select departmentId,departmentName
        from department where departmentId=#{departmentId}
    </select>

    <!--boolean addDepartment(Department department);-->
    <insert id="addDepartment">
        insert into department(departmentName)
        values (#{departmentName})
    </insert>

    <!--Department getDepartmentByName(String departmentName);-->
    <select id="getDepartmentByName" resultType="Department">
        <include refid="BaseSql"></include>
        where departmentName=#{departmentName}
    </select>

    <!--boolean deleteDepartmentById(Integer departmentId);-->
    <delete id="deleteDepartmentById">
        delete from department where departmentId=#{departmentId}
    </delete>

    <!--List<Student> getStudentByDepartmentId(Integer departmentId);-->
    <select id="getStudentByDepartmentId" resultType="Student">
        select studentId,studentName,sex,nation,birthday,homeTown,marriage,phone,identityNum,graduate,major,photo,classId,managerId,departmentId,jobId,hiredate,remarks
        from student
        where departmentId=#{departmentId}
    </select>

    <!--List<Department> getDepartmentPaging(Integer count, Integer pageSize, String departmentName);-->
    <select id="getDepartmentPaging" resultType="Department">
        <include refid="BaseSql"></include>
        <where>
            <if test="departmentName != null and departmentName != ''">
                departmentName like '%' #{departmentName} '%'
            </if>
        </where>
        order by departmentId desc
        limit #{count},#{pageSize}
    </select>

    <!--List<Department> getAllDepartment(String departmentName);-->
    <select id="getAllDepartment" resultType="Department">
        <include refid="BaseSql"></include>
        <where>
            <if test="departmentName != null and departmentName != ''">
                departmentName like '%' #{departmentName} '%'
            </if>
        </where>
        order by departmentId desc
    </select>
<select id="getAllDep" resultType="com.jxd.model.Department">
    <include refid="BaseSql"></include>
</select>
    <sql id="BaseSql">
        select departmentId,departmentName from department
    </sql>
</mapper>