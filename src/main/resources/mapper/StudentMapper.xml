<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace目前可以自定义要唯一，将来面向接口编程时对应dao接口，一个mapper相当于一个dao接口的实现类 -->
<mapper namespace="com.jxd.dao.IStudentDao">
    <!--boolean editStudent(Student student);-->
    <update id="editStudent">
        update student set studentName=#{studentName}
        where studentId=#{studentId}
    </update>

    <!--Student getStudentById(Integer studentId);-->
    <select id="getStudentById" resultType="Student">
        <include refid="BaseSql"></include>
        where studentId=#{studentId}
    </select>

    <!--Clazz getClazzById(Integer classId);-->
    <select id="getClazzById" resultType="Clazz">
        select classId,clazz,teacherName from clazz
        where classId=#{classId}
    </select>

    <!--boolean addStudent(Student student);-->
    <insert id="addStudent">
        insert into student(studentName,sex,nation,birthday,homeTown,marriage,phone,identityNum,graduate,major,photo,classId,remarks)
        values (#{studentName},#{sex},#{nation},#{birthday},#{homeTown},#{marriage},#{phone},#{identityNum},#{graduate},#{major},#{photo},#{classId},#{remarks})
    </insert>

    <!--boolean deleteStudentById(Integer studentId);-->
    <delete id="deleteStudentById">
        delete from student where studentId=#{studentId}
    </delete>

    <!--boolean deleteStudentBatch(String studentIds);-->
    <delete id="deleteStudentBatch">
        delete from student where studentId in (${studentIds})
    </delete>


    <!--List<Student> getStudentPaging(Integer count, Integer pageSize, String studentName);-->
    <select id="getStudentPaging" resultType="Student">
        <include refid="BaseSql"></include>
        <where>
            <if test="studentName != null and studentName != ''">
                studentName like '%' #{studentName} '%'
            </if>
        </where>
        order by studentId desc
        limit #{count},#{pageSize}
    </select>

    <!--List<Student> getAllStudent();-->
    <select id="getAllStudent" resultType="Student">
        <include refid="BaseSql"></include>
    </select>

    <sql id="BaseSql">
        select studentId,studentName,sex,nation,birthday,homeTown,marriage,phone,identityNum,graduate,major,photo,classId,managerId,departmentId,jobId,hiredate,remarks
        from student
    </sql>
</mapper>